[flake8]
max-complexity = 6
max-line-length = 120
max-string-usages = 10
enable-extensions = G
format = pylint
isort-show-traceback = True
exclude =
    env/*
    docs/conf.py

# ATTENTION! If you're adding a rule to ignore - update the list below with code description and (optionally) the reason
# why it is disabled

# Just try to avoid non-ascii symbols in code at all (unless it is really needed to use them)
# C101: Coding magic comment not found

# Obsolete, see https://lintlyci.github.io/Flake8Rules/rules/W503.html
# W503: line break before binary operator

# Docstrings are not required (but advisable)
# D100: Missing docstring in public module
# D101: Missing docstring in public class
# D102: Missing docstring in public method
# D103: Missing docstring in public function
# D104: Missing docstring in public package
# D105: Missing docstring in magic method
# D106: Missing docstring in public nested class
# D107: Missing docstring in __init__

# Disabling some low-level bandit warning, that would often cause failures for no reason
# S311: Standard pseudo-random generators are not suitable for security/cryptographic purposes.
# S404: Consider possible security implications associated with subprocess module.
# S603: subprocess call - check for execution of untrusted input

# Rule is too annoying to follow it strictly
# WPS110: Found wrong variable name

# Don't insist on this rule
# WPS306: Found class without a base class

# It is useful for multiline strings. Just avoid such concatenation for single line ones.
# WPS326: Found implicit string concatenation

# Sometimes it is more clear to have `else` branch. Just be reasonable.
# WPS457: Found redundant returning `else` statement

ignore =
    C101,
    W503,
    D100,D101,D102,D103,D104,D105,D105,D106,D107,
    S311,S404,S603,
    WPS110,WPS306,WPS326,WPS457

per-file-ignores =
    # Should be ignored for settings until moving to a single environment-based settings module
    # E800: Found commented out code
    # F405: variable may be undefined, or defined from star imports
    # WPS407: Found mutable module constant
    config/settings/*:E800,F405,WPS407

    # E800: Found commented out code
    config/wsgi.py:E800

    # Tests will violate some rules - suppressing them
    # S101: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
    # WPS441: Found protected attribute usage
    */tests/*:S101,WPS441

    # Migration files are being generated automatically and it would be annoying to fix some errors
    # C812: missing trailing comma
    # E501: line too long
    # I001: isort found an import in the wrong position
    # N806: variable in function should be lowercase
    # WPS102: Found incorrect module name pattern
    # WPS221: Found line with high Jones Complexity
    # WPS301: Found dotted raw import
    # WPS317: Found incorrect multi-line parameters
    # WPS432: Found magic number
    */migrations/*:C812,E501,I001,N806,WPS102,WPS221,WPS301,WPS317,WPS432

    # This rule will cause a lot of failures for Django models, because there will be a lot of "not so magic" numbers,
    # meaning for which is clear from context - attributes for fields' max_length, default values etc.
    # WPS432: Found magic number
    */models.py:WPS432

[isort]
skip_glob = env/*
line_length = 119
# 3 - vertical hanging indent (inside parentheses, each import in a separate line)
multi_line_output = 3
indent = 4
default_section = FIRSTPARTY
order_by_type = true
atomic = true
combine_as_imports = true
combine_star = false
include_trailing_comma = true
use_parentheses = true

sections = FUTURE,STDLIB,THIRDPARTY,DJANGO,FIRSTPARTY,LOCALFOLDER
known_third_party = celery,model_mommy
known_django = allauth,django


[mypy]
python_version = 3.6
check_untyped_defs = True
ignore_errors = False
ignore_missing_imports = True
strict_optional = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True

[mypy-*.migrations.*]
# Django migrations should not produce any errors:
ignore_errors = True


[tool:pytest]
DJANGO_SETTINGS_MODULE = config.settings.test
python_files = test_*.py
{%- if cookiecutter.js_task_runner != 'None' %}
norecursedirs = node_modules
{%- endif %}


[coverage:run]
omit =
    env/*
    {%- if cookiecutter.js_task_runner != 'None' %}
    node_modules/*
    {%- endif %}

[coverage:report]
omit =
    */migrations/*
    */static/*
    */tests/*
    */urls.py
    config/settings/*
    config/wsgi.py
    docs/*
    env/*
    manage.py
    {%- if cookiecutter.js_task_runner != 'None' %}
    node_modules/*
    {%- endif %}
